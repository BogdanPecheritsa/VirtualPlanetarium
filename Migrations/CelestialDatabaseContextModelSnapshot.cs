// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VirtualPlanetarium.Models;

#nullable disable

namespace VirtualPlanetarium.Migrations
{
    [DbContext(typeof(CelestialDatabaseContext))]
    partial class CelestialDatabaseContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("VirtualPlanetarium.Models.CelestialObject", b =>
                {
                    b.Property<Guid>("ObjectId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectID");

                    b.Property<string>("Color")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Distance")
                        .HasColumnType("float");

                    b.Property<double?>("Mass")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(false)
                        .HasColumnType("varchar(100)");

                    b.Property<string>("ObjectType")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<double?>("Radius")
                        .HasColumnType("float");

                    b.Property<double?>("Temperature")
                        .HasColumnType("float");

                    b.HasKey("ObjectId")
                        .HasName("PK__Celestia__9A6192B18111D5D6");

                    b.ToTable("CelestialObjects");
                });

            modelBuilder.Entity("VirtualPlanetarium.Models.Comet", b =>
                {
                    b.Property<Guid>("CometId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("CometID");

                    b.Property<double?>("AphelionDistance")
                        .HasColumnType("float");

                    b.Property<string>("CometName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Composition")
                        .HasColumnType("text");

                    b.Property<double?>("Inclination")
                        .HasColumnType("float");

                    b.Property<double?>("NucleusDiameter")
                        .HasColumnType("float");

                    b.Property<Guid>("ObjectId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectID");

                    b.Property<double?>("OrbitalPeriod")
                        .HasColumnType("float");

                    b.Property<double?>("PerihelionDistance")
                        .HasColumnType("float");

                    b.HasKey("CometId")
                        .HasName("PK__Comets__6D2DFA460122FA05");

                    b.HasIndex(new[] { "ObjectId" }, "IX_Comets_ObjectID");

                    b.ToTable("Comets");
                });

            modelBuilder.Entity("VirtualPlanetarium.Models.Galaxy", b =>
                {
                    b.Property<Guid>("GalaxyId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("GalaxyID");

                    b.Property<double?>("Diameter")
                        .HasColumnType("float");

                    b.Property<string>("GalaxyName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("GalaxyType")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<Guid>("ObjectId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectID");

                    b.Property<double?>("Redshift")
                        .HasColumnType("float");

                    b.HasKey("GalaxyId")
                        .HasName("PK__Galaxies__D77289FF4364299B");

                    b.HasIndex(new[] { "ObjectId" }, "IX_Galaxies_ObjectID");

                    b.ToTable("Galaxies");
                });

            modelBuilder.Entity("VirtualPlanetarium.Models.Nebulae", b =>
                {
                    b.Property<Guid>("NebulaeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("NebulaID");

                    b.Property<double?>("Brightness")
                        .HasColumnType("float");

                    b.Property<string>("Composition")
                        .HasColumnType("text");

                    b.Property<string>("NebulaeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NebulaeType")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<Guid>("ObjectId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectID");

                    b.Property<double?>("Size")
                        .HasColumnType("float");

                    b.HasKey("NebulaeId")
                        .HasName("PK__Nebulae__5FEAEDEB32215280");

                    b.HasIndex(new[] { "ObjectId" }, "IX_Nebulae_ObjectID");

                    b.ToTable("Nebulae", (string)null);
                });

            modelBuilder.Entity("VirtualPlanetarium.Models.Planet", b =>
                {
                    b.Property<Guid>("PlanetId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("PlanetID");

                    b.Property<string>("AtmosphericComposition")
                        .HasColumnType("text");

                    b.Property<double?>("Eccentricity")
                        .HasColumnType("float");

                    b.Property<double?>("Inclination")
                        .HasColumnType("float");

                    b.Property<double?>("Mass")
                        .HasColumnType("float");

                    b.Property<Guid>("ObjectId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectID");

                    b.Property<double?>("OrbitSemiMajorAxis")
                        .HasColumnType("float");

                    b.Property<string>("PlanetName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Radius")
                        .HasColumnType("float");

                    b.Property<string>("SurfaceFeatures")
                        .HasColumnType("text");

                    b.HasKey("PlanetId")
                        .HasName("PK__Planets__1B0638C51DA90671");

                    b.HasIndex(new[] { "ObjectId" }, "IX_Planets_ObjectID");

                    b.ToTable("Planets");
                });

            modelBuilder.Entity("VirtualPlanetarium.Models.Star", b =>
                {
                    b.Property<Guid>("StarId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("StarID");

                    b.Property<double?>("Age")
                        .HasColumnType("float");

                    b.Property<double?>("Luminosity")
                        .HasColumnType("float");

                    b.Property<double?>("Mass")
                        .HasColumnType("float");

                    b.Property<Guid>("ObjectId")
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ObjectID");

                    b.Property<double?>("Radius")
                        .HasColumnType("float");

                    b.Property<string>("SpectralClass")
                        .HasMaxLength(1)
                        .IsUnicode(false)
                        .HasColumnType("char(1)")
                        .IsFixedLength();

                    b.Property<string>("StarName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("Temperature")
                        .HasColumnType("int");

                    b.HasKey("StarId")
                        .HasName("PK__Stars__06ABC6475484F84A");

                    b.HasIndex(new[] { "ObjectId" }, "IX_Stars_ObjectID");

                    b.ToTable("Stars");
                });

            modelBuilder.Entity("VirtualPlanetarium.Models.Comet", b =>
                {
                    b.HasOne("VirtualPlanetarium.Models.CelestialObject", "Object")
                        .WithMany("Comets")
                        .HasForeignKey("ObjectId")
                        .IsRequired()
                        .HasConstraintName("FK__Comets__ObjectID__412EB0B6");

                    b.Navigation("Object");
                });

            modelBuilder.Entity("VirtualPlanetarium.Models.Galaxy", b =>
                {
                    b.HasOne("VirtualPlanetarium.Models.CelestialObject", "Object")
                        .WithMany("Galaxies")
                        .HasForeignKey("ObjectId")
                        .IsRequired()
                        .HasConstraintName("FK__Galaxies__Object__3E52440B");

                    b.Navigation("Object");
                });

            modelBuilder.Entity("VirtualPlanetarium.Models.Nebulae", b =>
                {
                    b.HasOne("VirtualPlanetarium.Models.CelestialObject", "Object")
                        .WithMany("Nebulaes")
                        .HasForeignKey("ObjectId")
                        .IsRequired()
                        .HasConstraintName("FK__Nebulae__ObjectI__440B1D61");

                    b.Navigation("Object");
                });

            modelBuilder.Entity("VirtualPlanetarium.Models.Planet", b =>
                {
                    b.HasOne("VirtualPlanetarium.Models.CelestialObject", "Object")
                        .WithMany("Planets")
                        .HasForeignKey("ObjectId")
                        .IsRequired()
                        .HasConstraintName("FK__Planets__ObjectI__3B75D760");

                    b.Navigation("Object");
                });

            modelBuilder.Entity("VirtualPlanetarium.Models.Star", b =>
                {
                    b.HasOne("VirtualPlanetarium.Models.CelestialObject", "Object")
                        .WithMany("Stars")
                        .HasForeignKey("ObjectId")
                        .IsRequired()
                        .HasConstraintName("FK__Stars__ObjectID__38996AB5");

                    b.Navigation("Object");
                });

            modelBuilder.Entity("VirtualPlanetarium.Models.CelestialObject", b =>
                {
                    b.Navigation("Comets");

                    b.Navigation("Galaxies");

                    b.Navigation("Nebulaes");

                    b.Navigation("Planets");

                    b.Navigation("Stars");
                });
#pragma warning restore 612, 618
        }
    }
}
